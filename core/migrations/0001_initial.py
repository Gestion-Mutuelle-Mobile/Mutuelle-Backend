# Generated by Django 5.1.1 on 2025-06-02 22:03

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ConfigurationMutuelle",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "montant_inscription",
                    models.DecimalField(
                        decimal_places=2,
                        default=150000,
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Montant inscription (FCFA)",
                    ),
                ),
                (
                    "montant_solidarite",
                    models.DecimalField(
                        decimal_places=2,
                        default=10000,
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Montant solidarité par session (FCFA)",
                    ),
                ),
                (
                    "taux_interet",
                    models.DecimalField(
                        decimal_places=2,
                        default=3.0,
                        max_digits=5,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Taux d'intérêt (%)",
                    ),
                ),
                (
                    "coefficient_emprunt_max",
                    models.IntegerField(
                        default=5,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Coefficient multiplicateur max pour emprunts",
                    ),
                ),
                (
                    "duree_exercice_mois",
                    models.IntegerField(
                        default=12,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Durée exercice (mois)",
                    ),
                ),
                ("date_creation", models.DateTimeField(auto_now_add=True)),
                ("date_modification", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Configuration Mutuelle",
                "verbose_name_plural": "Configurations Mutuelle",
            },
        ),
        migrations.CreateModel(
            name="TypeAssistance",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "nom",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Nom du type"
                    ),
                ),
                (
                    "montant",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Montant (FCFA)",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                ("actif", models.BooleanField(default=True, verbose_name="Actif")),
                ("date_creation", models.DateTimeField(auto_now_add=True)),
                ("date_modification", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Type d'assistance",
                "verbose_name_plural": "Types d'assistance",
                "ordering": ["nom"],
            },
        ),
        migrations.CreateModel(
            name="Exercice",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "nom",
                    models.CharField(max_length=100, verbose_name="Nom de l'exercice"),
                ),
                ("date_debut", models.DateField(verbose_name="Date de début")),
                ("date_fin", models.DateField(verbose_name="Date de fin")),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("EN_COURS", "En cours"),
                            ("TERMINE", "Terminé"),
                            ("PLANIFIE", "Planifié"),
                        ],
                        default="PLANIFIE",
                        max_length=10,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                ("date_creation", models.DateTimeField(auto_now_add=True)),
                ("date_modification", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Exercice",
                "verbose_name_plural": "Exercices",
                "ordering": ["-date_debut"],
                "unique_together": {("date_debut", "date_fin")},
            },
        ),
        migrations.CreateModel(
            name="FondsSocial",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "montant_total",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="Montant total du fonds social (FCFA)",
                    ),
                ),
                ("date_creation", models.DateTimeField(auto_now_add=True)),
                ("date_modification", models.DateTimeField(auto_now=True)),
                (
                    "exercice",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fonds_social",
                        to="core.exercice",
                    ),
                ),
            ],
            options={
                "verbose_name": "Fonds Social",
                "verbose_name_plural": "Fonds Sociaux",
            },
        ),
        migrations.CreateModel(
            name="MouvementFondsSocial",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "type_mouvement",
                    models.CharField(
                        choices=[("ENTREE", "Entrée"), ("SORTIE", "Sortie")],
                        max_length=10,
                    ),
                ),
                ("montant", models.DecimalField(decimal_places=2, max_digits=12)),
                ("description", models.TextField()),
                ("date_mouvement", models.DateTimeField(auto_now_add=True)),
                (
                    "fonds_social",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mouvements",
                        to="core.fondssocial",
                    ),
                ),
            ],
            options={
                "verbose_name": "Mouvement Fonds Social",
                "verbose_name_plural": "Mouvements Fonds Social",
                "ordering": ["-date_mouvement"],
            },
        ),
        migrations.CreateModel(
            name="Session",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "nom",
                    models.CharField(max_length=100, verbose_name="Nom de la session"),
                ),
                ("date_session", models.DateField(verbose_name="Date de la session")),
                (
                    "montant_collation",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Montant collation (FCFA)",
                    ),
                ),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("EN_COURS", "En cours"),
                            ("TERMINEE", "Terminée"),
                            ("PLANIFIEE", "Planifiée"),
                        ],
                        default="PLANIFIEE",
                        max_length=10,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                ("date_creation", models.DateTimeField(auto_now_add=True)),
                ("date_modification", models.DateTimeField(auto_now=True)),
                (
                    "exercice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sessions",
                        to="core.exercice",
                        verbose_name="Exercice",
                    ),
                ),
            ],
            options={
                "verbose_name": "Session",
                "verbose_name_plural": "Sessions",
                "ordering": ["-date_session"],
            },
        ),
        migrations.CreateModel(
            name="Membre",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "numero_membre",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="Numéro de membre"
                    ),
                ),
                (
                    "date_inscription",
                    models.DateField(verbose_name="Date d'inscription"),
                ),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("EN_REGLE", "En règle"),
                            ("NON_EN_REGLE", "Non en règle"),
                            ("SUSPENDU", "Suspendu"),
                        ],
                        default="NON_EN_REGLE",
                        max_length=15,
                        verbose_name="Statut",
                    ),
                ),
                ("date_creation", models.DateTimeField(auto_now_add=True)),
                ("date_modification", models.DateTimeField(auto_now=True)),
                (
                    "exercice_inscription",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nouveaux_membres",
                        to="core.exercice",
                        verbose_name="Exercice d'inscription",
                    ),
                ),
                (
                    "utilisateur",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="membre_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "session_inscription",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nouveaux_membres",
                        to="core.session",
                        verbose_name="Session d'inscription",
                    ),
                ),
            ],
            options={
                "verbose_name": "Membre",
                "verbose_name_plural": "Membres",
                "ordering": ["-date_inscription"],
            },
        ),
        migrations.AddConstraint(
            model_name="session",
            constraint=models.UniqueConstraint(
                condition=models.Q(("statut", "EN_COURS")),
                fields=("exercice",),
                name="unique_session_en_cours_par_exercice",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="session",
            unique_together={("exercice", "date_session")},
        ),
    ]
